{"ast":null,"code":"var _jsxFileName = \"/home/nishant/AAReact/TextUtilsNew/src/components/TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './my.css';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [copied, setCopied] = useState(false);\n\n  const handleUpClick = () => {\n    let newtext = text.toUpperCase();\n    setText(newtext);\n    props.showAlert('Converted to UpperCase', \"success\");\n  };\n\n  const handleLoClick = () => {\n    let newtext = text.toLowerCase();\n    setText(newtext);\n    props.showAlert('Converted to LowerCase', \"success\");\n  };\n\n  const handleToDelete = () => {\n    let delText = \"\";\n    setText(delText);\n    props.showAlert('Text Cleard', \"success\");\n  };\n\n  const handleOnchange = event => {\n    setText(event.target.value);\n  };\n\n  const downloadTxtFile = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([text], {\n      type: 'text/plain;charset=utf-8'\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"myFile.txt\";\n    document.body.appendChild(element);\n    element.click();\n    props.showAlert('File is Downloading.....', \"success\");\n  }; // const makeTitleCase = () => {\n  //     let titleText = text.split(\" \").map((currentValue) => {\n  //         let titleText = currentValue[0].toUpperCase() + currentValue.slice(1);\n  //         return titleText;\n  //     }\n  //     );\n  //     setText(titleText.join(\" \"));\n  //     props.showAlert('Converted to TitleCase', \"success\");\n  // }\n\n\n  const handleExtraSpace = () => {\n    let exText = text.split(/[ ]+/);\n    setText(exText.join(\" \"));\n    props.showAlert('Extra spaces has been removed', \"success\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? \"white\" : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \" Welcome to textUtils \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"\",\n        children: [props.heading, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnchange,\n          style: {\n            backgroundColor: props.mode === 'dark' ? '#333' : 'white',\n            color: props.mode === 'dark' ? \"white\" : 'black'\n          },\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), copied ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bg-dark text-danger p-1\",\n          children: \"Text Copied.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 31\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-info m-1\",\n        onClick: handleUpClick,\n        children: \"UperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-info m-1\",\n        onClick: handleLoClick,\n        children: \"LowerCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-info m-1\",\n        onClick: handleToDelete,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n        text: text,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: text.length === 0,\n          onClick: onCopy,\n          className: \"btn btn-info m-1\",\n          children: \"Copy to clipboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-info m-1\",\n        onClick: downloadTxtFile,\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-info m-1\",\n        onClick: handleExtraSpace,\n        children: \"Remove extra Spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container pt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Text sumary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Words : \", text.split(/\\s+/).filter(element => {\n          return element.length !== 0;\n        }).length, \"  | letters : \", text.length, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(\" \").filter(element => {\n          return element.length !== 0;\n        }).length, \" Minutes To read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Preview :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"px-5 preview\",\n        children: text.length === 0 ? \"Nothing to Preview here\" : text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TextForm, \"95ksnS/g6C2tGylPRSNCkMInqlA=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"sources":["/home/nishant/AAReact/TextUtilsNew/src/components/TextForm.js"],"names":["React","useState","CopyToClipboard","TextForm","props","text","setText","copied","setCopied","handleUpClick","newtext","toUpperCase","showAlert","handleLoClick","toLowerCase","handleToDelete","delText","handleOnchange","event","target","value","downloadTxtFile","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","handleExtraSpace","exText","split","join","color","mode","heading","backgroundColor","length","onCopy","filter"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './my.css';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nexport default function TextForm(props) {\n    const [text, setText] = useState(\"\");\n    const [copied, setCopied] = useState(false);\n\n    const handleUpClick = () => {\n        let newtext = text.toUpperCase();\n        setText(newtext);\n        props.showAlert('Converted to UpperCase', \"success\");\n    }\n    const handleLoClick = () => {\n        let newtext = text.toLowerCase();\n        setText(newtext);\n        props.showAlert('Converted to LowerCase', \"success\");\n    }\n    const handleToDelete = () => {\n        let delText = \"\";\n        setText(delText);\n        props.showAlert('Text Cleard', \"success\");\n    }\n    const handleOnchange = (event) => {\n        setText(event.target.value);\n    }\n    const downloadTxtFile = () => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([text], { type: 'text/plain;charset=utf-8' });\n        element.href = URL.createObjectURL(file);\n        element.download = \"myFile.txt\";\n        document.body.appendChild(element);\n        element.click();\n        props.showAlert('File is Downloading.....', \"success\");\n    }\n    // const makeTitleCase = () => {\n    //     let titleText = text.split(\" \").map((currentValue) => {\n    //         let titleText = currentValue[0].toUpperCase() + currentValue.slice(1);\n    //         return titleText;\n    //     }\n    //     );\n    //     setText(titleText.join(\" \"));\n    //     props.showAlert('Converted to TitleCase', \"success\");\n    // }\n    const handleExtraSpace = () => {\n        let exText = text.split(/[ ]+/);\n        setText(exText.join(\" \"));\n        props.showAlert('Extra spaces has been removed', \"success\");\n    }\n\n    return (\n        <>\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? \"white\" : 'black' }}>\n                <h4> Welcome to textUtils </h4>\n                <h2 className=\"\">{props.heading} </h2>\n                <div className=\"\">\n                    <textarea className=\"form-control\" value={text} onChange={handleOnchange} style={{\n                        backgroundColor: props.mode === 'dark' ? '#333' : 'white',\n                        color: props.mode === 'dark' ? \"white\" : 'black'\n                    }} id=\"myBox\" rows=\"8\"></textarea>\n                    {copied ? <p className=\"bg-dark text-danger p-1\">Text Copied.</p> : null}\n                </div>\n                <button disabled={text.length === 0} className=\"btn btn-info m-1\" onClick={handleUpClick} >UperCase</button>\n                <button disabled={text.length === 0} className=\"btn btn-info m-1\" onClick={handleLoClick} >LowerCase</button>\n                <button disabled={text.length === 0} className=\"btn btn-info m-1\" onClick={handleToDelete} >Clear Text</button>\n                <CopyToClipboard text={text} >\n                    <button disabled={text.length === 0}   onClick={onCopy} className=\"btn btn-info m-1\">Copy to clipboard</button>\n                </CopyToClipboard>\n                <button disabled={text.length === 0} className=\"btn btn-info m-1\" onClick={downloadTxtFile}>Download</button>\n                {/* <button disabled={text.length === 0} className=\"btn btn-info m-1\" onClick={makeTitleCase}>Title Case</button> */}\n                <button disabled={text.length === 0} className=\"btn btn-info m-1\" onClick={handleExtraSpace} >Remove extra Spaces</button>\n            </div>\n            <div className=\"container pt-3\">\n                <h2>Your Text sumary</h2>\n                <p>Words : {text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length}  | letters : {text.length} </p>\n                <p>{0.008 * text.split(\" \").filter((element) => { return element.length !== 0 }).length} Minutes To read</p>\n                <h3>Preview :</h3>\n                <p className=\"px-5 preview\">{text.length === 0 ? \"Nothing to Preview here\" : text}</p>\n            </div>\n\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}